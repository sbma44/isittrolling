<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=9,chrome=1">
    <title>Pxxl.js demopage</title>
    <link rel="stylesheet" href="../demo.css">
    <link rel="stylesheet" href="demo.css">
    <link rel="stylesheet" href="../highlight.css">
    <link rel="stylesheet" href="../monokai.css">
  </head>
  <body>
  <canvas width="900" height="80"></canvas>

  <div class="ribbon header">
    <span class="title">hello world canvas example</span>
    <span class="right">
      see the <a href="https://github.com/remcoder/Pxxl.js">Pxxl.js Github repo</a> for tha codez
    </span>
  </div>

  <div class="ribbon footer">
    <a href="https://realstuffforabstractpeople.com">realstuffforabstractpeople.com</a>

   <span class="right">&copy; 2012 <a href="http://twitter.com/remcoder">@remcoder</a></span>
  </div>


  <pre class="code">
    <code class="javascript">
    </code>
  </pre>

  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
  
  <script src="../pxxl-0.4.0.js" type="text/javascript"></script>

  <script type="text/javascript" id="code">
pxxl('../../fonts/c64d.bdf', 'hello world', function (pixels) {
  var ctx = $('canvas')[0].getContext('2d');

  setInterval(function() {
    // loop through the pixels and also keep track of a counter
    for (var p=0,count =0 ; p<pixels.length ; p++,count++) {
      var pixel = pixels[p],
        x = pixel.x * 5,
        y = pixel.y * 5;
      
      // compute the hue based on the counter + the current time 
      // to make the colors cycle
      var hue = count + new Date()/10; 

      ctx.fillStyle = "hsl("+ hue%360 +",100%,50%)";
      ctx.fillRect(x,y,4,4);
    }
  },100);
});
    </script>
    <script src='../highlight.pack.js'></script>
    <script>
      $("code").text($("#code").text());
      hljs.tabReplace = '  ';
      hljs.initHighlightingOnLoad();
    </script>
  </body>
</html>
